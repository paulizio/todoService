AWSTemplateFormatVersion: '2010-09-09'
Description: todoService
Transform:
- AWS::Serverless-2016-10-31
Resources:
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/query.getAllItemsHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TodoTable
      Environment:
        Variables:
          TODO_TABLE:
            Ref: TodoTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /todo
            Method: GET
      CodeUri: getAllItemsFunction
    Metadata:
      SamResourceId: getAllItemsFunction
  deleteByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/delete.deleteByIdHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TodoTable
      Environment:
        Variables:
          TODO_TABLE:
            Ref: TodoTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /todo/{id}
            Method: DELETE
      CodeUri: deleteByIdFunction
    Metadata:
      SamResourceId: deleteByIdFunction
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create.createItemHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TodoTable
      Environment:
        Variables:
          TODO_TABLE:
            Ref: TodoTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /todo
            Method: POST
      CodeUri: putItemFunction
    Metadata:
      SamResourceId: putItemFunction
  TodoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: todoType
        AttributeType: S
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: todoType
        KeyType: HASH
      - AttributeName: id
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  TodoServiceApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Body:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location:
              Fn::Sub: s3://todoservice-openapi-bucket/openapi.yaml
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${TodoServiceApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
